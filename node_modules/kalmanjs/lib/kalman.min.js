//kalmanjs, LGPL-3.0, https://github.com/wouterbulten/kalmanjs
"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var s=0;s<e.length;s++){var i=e[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,s,i){return s&&t(e.prototype,s),i&&t(e,i),e}}();Object.defineProperty(exports,"__esModule",{value:!0});var KalmanFilter=function(){function t(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],s=e.R,i=void 0===s?1:s,n=e.Q,a=void 0===n?1:n,r=e.A,h=void 0===r?1:r,o=e.B,u=void 0===o?0:o,l=e.C,c=void 0===l?1:l;_classCallCheck(this,t),this.R=i,this.Q=a,this.A=h,this.C=c,this.B=u,this.cov=NaN,this.x=NaN}return _createClass(t,[{key:"filter",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?0:arguments[1];if(isNaN(this.x))this.x=1/this.C*t,this.cov=1/this.C*this.Q*(1/this.C);else{var s=this.A*this.x+this.B*e,i=this.A*this.cov*this.A+this.R,n=i*this.C*(1/(this.C*i*this.C+this.Q));this.x=s+n*(t-this.C*s),this.cov=i-n*this.C*i}return this.x}},{key:"lastMeasurement",value:function(){return this.x}},{key:"setMeasurementNoise",value:function(t){this.Q=t}},{key:"setProcessNoise",value:function(t){this.R=t}}]),t}();exports["default"]=KalmanFilter;
//# sourceMappingURL=lib/kalman.min.js.map